# This is a Docker Compose configuration
# intended for development purposes only

version: '3'

volumes:
  db: {}

services:
  db:
    image: mysql:8
    container_name: db
    environment:
      MYSQL_DATABASE: bookstack-dev
      MYSQL_USER: bookstack-test
      MYSQL_PASSWORD: bookstack-test
      MYSQL_RANDOM_ROOT_PASSWORD: 'true'
    volumes:
      - ./dev/docker/init.db:/docker-entrypoint-initdb.d
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: app
    environment:
      APP_URL: https://bookstack.sectest.co.uk
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: bookstack-dev
      DB_USERNAME: bookstack-test
      DB_PASSWORD: bookstack-test
      TEST_DATABASE_URL: mysql://bookstack-test:bookstack-test@db/bookstack-test
      MAIL_DRIVER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
    ports:
      - ${DEV_PORT:-8080}:80
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/start:/usr/local/bin/start
    extra_hosts:
    - "host.docker.internal:host-gateway"
    depends_on:
      - db
  node:
    image: node:alpine
    working_dir: /app
    user: node
    volumes:
      - ./:/app
    entrypoint: /app/dev/docker/entrypoint.node.sh
  mailhog:
    image: mailhog/mailhog
    ports:
      - ${DEV_MAIL_PORT:-8025}:8025
  haproxy:
    image: haproxy:2.7-bullseye
    container_name: haproxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/haproxy:/usr/local/etc/haproxy
    depends_on:
      - app
  zap:
    build:
      context: .
      dockerfile: ./docker/zap.dockerfile
    container_name: zap
    entrypoint: [ "zap-baseline.py", "-t", "https://bookstack.sectest.co.uk", "-r", "report.html"]
    volumes:
      - ./docker/zap:/zap/wrk/
    extra_hosts:
      - "bookstack.sectest.co.uk:10.0.0.1"
    depends_on:
      - haproxy
